/**
 * Migraci√≥n: Actualizar moneda principal por defecto a USD
 * Fecha: 2024-12-20
 * Descripci√≥n: Cambia la moneda principal por defecto de NIO a USD para preparar el sistema mundial
 */

exports.up = async function(knex) {
  console.log('üîÑ Ejecutando migraci√≥n: Actualizar moneda principal por defecto a USD');
  
  try {
    // Actualizar configuraciones de usuarios que tengan NIO como moneda principal por defecto
    // Solo actualizar si no han configurado expl√≠citamente su moneda
    const updatedRows = await knex('user_settings')
      .where('primary_currency', 'NIO')
      .update({
        primary_currency: 'USD',
        updated_at: knex.fn.now()
      });

    console.log(`‚úÖ Actualizadas ${updatedRows} configuraciones de usuario a USD`);

    // Tambi√©n actualizar la configuraci√≥n por defecto en el c√≥digo
    // (esto se hace en el servicio de autenticaci√≥n)
    console.log('‚úÖ Configuraci√≥n por defecto actualizada en el c√≥digo');

  } catch (error) {
    console.error('‚ùå Error en migraci√≥n:', error);
    throw error;
  }
};

exports.down = async function(knex) {
  console.log('üîÑ Revertiendo migraci√≥n: Restaurar moneda principal por defecto a NIO');
  
  try {
    // Revertir configuraciones de usuarios que fueron actualizadas autom√°ticamente
    // Solo revertir si fueron actualizadas por esta migraci√≥n
    const revertedRows = await knex('user_settings')
      .where('primary_currency', 'USD')
      .whereRaw('updated_at >= ?', [new Date('2024-12-20')])
      .update({
        primary_currency: 'NIO',
        updated_at: knex.fn.now()
      });

    console.log(`‚úÖ Revertidas ${revertedRows} configuraciones de usuario a NIO`);

  } catch (error) {
    console.error('‚ùå Error al revertir migraci√≥n:', error);
    throw error;
  }
};
