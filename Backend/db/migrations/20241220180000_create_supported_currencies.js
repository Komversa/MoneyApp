/**
 * Migraci√≥n: Crear tabla supported_currencies
 * Fecha: 2024-12-20 18:00:00
 * Descripci√≥n: Crea la tabla de monedas soportadas y la puebla con monedas importantes
 */

exports.up = async function(knex) {
  console.log('üîÑ Ejecutando migraci√≥n: Crear tabla supported_currencies');
  
  try {
    // Crear la tabla supported_currencies
    await knex.schema.createTable('supported_currencies', (table) => {
      table.string('code', 3).primary().comment('C√≥digo ISO de la moneda (ej: USD, EUR)');
      table.string('name', 50).notNullable().comment('Nombre completo de la moneda');
      table.string('symbol', 5).notNullable().comment('S√≠mbolo de la moneda (ej: $, ‚Ç¨)');
      table.timestamps(true, true);
      
      // √çndices para optimizaci√≥n
      table.index(['code']);
    });
    
    console.log('‚úÖ Tabla supported_currencies creada exitosamente');
    
    // Insertar monedas importantes
    console.log('üîÑ Insertando monedas soportadas...');
    
    const currencies = [
      {
        code: 'USD',
        name: 'D√≥lar Estadounidense',
        symbol: '$',
        created_at: knex.fn.now(),
        updated_at: knex.fn.now()
      },
      {
        code: 'EUR',
        name: 'Euro',
        symbol: '‚Ç¨',
        created_at: knex.fn.now(),
        updated_at: knex.fn.now()
      },
      {
        code: 'NIO',
        name: 'C√≥rdoba Nicarag√ºense',
        symbol: 'C$',
        created_at: knex.fn.now(),
        updated_at: knex.fn.now()
      },
      {
        code: 'JPY',
        name: 'Yen Japon√©s',
        symbol: '¬•',
        created_at: knex.fn.now(),
        updated_at: knex.fn.now()
      },
      {
        code: 'GBP',
        name: 'Libra Esterlina',
        symbol: '¬£',
        created_at: knex.fn.now(),
        updated_at: knex.fn.now()
      },
      {
        code: 'MXN',
        name: 'Peso Mexicano',
        symbol: '$',
        created_at: knex.fn.now(),
        updated_at: knex.fn.now()
      },
      {
        code: 'CAD',
        name: 'D√≥lar Canadiense',
        symbol: 'C$',
        created_at: knex.fn.now(),
        updated_at: knex.fn.now()
      },
      {
        code: 'AUD',
        name: 'D√≥lar Australiano',
        symbol: 'A$',
        created_at: knex.fn.now(),
        updated_at: knex.fn.now()
      },
      {
        code: 'CHF',
        name: 'Franco Suizo',
        symbol: 'CHF',
        created_at: knex.fn.now(),
        updated_at: knex.fn.now()
      },
      {
        code: 'CNY',
        name: 'Yuan Chino',
        symbol: '¬•',
        created_at: knex.fn.now(),
        updated_at: knex.fn.now()
      },
      {
        code: 'BRL',
        name: 'Real Brasile√±o',
        symbol: 'R$',
        created_at: knex.fn.now(),
        updated_at: knex.fn.now()
      },
      {
        code: 'ARS',
        name: 'Peso Argentino',
        symbol: '$',
        created_at: knex.fn.now(),
        updated_at: knex.fn.now()
      },
      {
        code: 'CLP',
        name: 'Peso Chileno',
        symbol: '$',
        created_at: knex.fn.now(),
        updated_at: knex.fn.now()
      },
      {
        code: 'COP',
        name: 'Peso Colombiano',
        symbol: '$',
        created_at: knex.fn.now(),
        updated_at: knex.fn.now()
      },
      {
        code: 'PEN',
        name: 'Sol Peruano',
        symbol: 'S/',
        created_at: knex.fn.now(),
        updated_at: knex.fn.now()
      }
    ];
    
    await knex('supported_currencies').insert(currencies);
    
    console.log(`‚úÖ Insertadas ${currencies.length} monedas soportadas`);
    console.log('üéâ Migraci√≥n completada: Tabla supported_currencies creada y poblada');
    
  } catch (error) {
    console.error('‚ùå Error en migraci√≥n:', error);
    throw error;
  }
};

exports.down = async function(knex) {
  console.log('üîÑ Revertiendo migraci√≥n: Eliminar tabla supported_currencies');
  
  try {
    await knex.schema.dropTableIfExists('supported_currencies');
    console.log('‚úÖ Tabla supported_currencies eliminada');
  } catch (error) {
    console.error('‚ùå Error al revertir migraci√≥n:', error);
    throw error;
  }
};
